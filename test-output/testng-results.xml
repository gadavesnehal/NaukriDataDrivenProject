<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="4" ignored="4" total="16" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-13T15:16:19 IST" name="All Test Suite" finished-at="2023-09-13T15:17:37 IST" duration-ms="78013">
    <groups>
    </groups>
    <test started-at="2023-09-13T15:16:19 IST" name="C:/Users/Rahul/Desktop/Edubridge/Selenium/Selenium codes/NaukriCom_FinalDataDrivenProject" finished-at="2023-09-13T15:17:37 IST" duration-ms="78013">
      <class name="testclasses.LoginTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:14 IST" name="beforeMethod" finished-at="2023-09-13T15:17:18 IST" duration-ms="4069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="sampleFailedTestCase2()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:18 IST" name="sampleFailedTestCase2" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:18 IST" duration-ms="2" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.LoginTest.sampleFailedTestCase2(LoginTest.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:18 IST" name="afterMethod" finished-at="2023-09-13T15:17:18 IST" duration-ms="467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:18 IST" name="beforeMethod" finished-at="2023-09-13T15:17:23 IST" duration-ms="4165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="sampleFailedTestCase2()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:23 IST" name="sampleFailedTestCase2" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:23 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.LoginTest.sampleFailedTestCase2(LoginTest.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:23 IST" name="afterMethod" finished-at="2023-09-13T15:17:23 IST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:23 IST" name="beforeMethod" finished-at="2023-09-13T15:17:27 IST" duration-ms="4306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="sampleFailedTestCase2()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:27 IST" name="sampleFailedTestCase2" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:27 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.LoginTest.sampleFailedTestCase2(LoginTest.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:27 IST" name="afterMethod" finished-at="2023-09-13T15:17:28 IST" duration-ms="433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:28 IST" name="beforeMethod" finished-at="2023-09-13T15:17:32 IST" duration-ms="4478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyLoginWithValidUserNameAndValidPassword()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:32 IST" name="verifyLoginWithValidUserNameAndValidPassword" description="verify login with valid username and valid password" finished-at="2023-09-13T15:17:36 IST" duration-ms="3769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidUserNameAndValidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.LoginTest@1eb5174b]" started-at="2023-09-13T15:17:36 IST" name="afterMethod" finished-at="2023-09-13T15:17:37 IST" duration-ms="520" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testclasses.LoginTest -->
      <class name="testclasses.HomeTest">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:19 IST" name="beforeMethod" finished-at="2023-09-13T15:16:25 IST" duration-ms="6710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyWindowHandlingFunctionality()[pri:1, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:25 IST" name="verifyWindowHandlingFunctionality" description="verify window handling functionality" finished-at="2023-09-13T15:16:29 IST" duration-ms="3858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWindowHandlingFunctionality -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:29 IST" name="afterMethod" finished-at="2023-09-13T15:16:30 IST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:30 IST" name="beforeMethod" finished-at="2023-09-13T15:16:36 IST" duration-ms="5947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyDropDownFunctionality()[pri:2, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:36 IST" name="verifyDropDownFunctionality" description="verify dropdown functionality" finished-at="2023-09-13T15:16:39 IST" duration-ms="3072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDropDownFunctionality -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:39 IST" name="afterMethod" finished-at="2023-09-13T15:16:39 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:39 IST" name="beforeMethod" finished-at="2023-09-13T15:16:45 IST" duration-ms="6006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyMouseOverFunctionality()[pri:3, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:45 IST" name="verifyMouseOverFunctionality" description="verify mouseover functionality" finished-at="2023-09-13T15:16:46 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyMouseOverFunctionality -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:46 IST" name="afterMethod" finished-at="2023-09-13T15:16:46 IST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:46 IST" name="beforeMethod" finished-at="2023-09-13T15:16:51 IST" duration-ms="4394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyCheckBoxFunctionality()[pri:4, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:51 IST" name="verifyCheckBoxFunctionality" description="verify checkbox functionality" finished-at="2023-09-13T15:16:54 IST" duration-ms="3659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCheckBoxFunctionality -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:54 IST" name="afterMethod" finished-at="2023-09-13T15:16:55 IST" duration-ms="393" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:55 IST" name="beforeMethod" finished-at="2023-09-13T15:16:59 IST" duration-ms="4476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyScrollDownScrollUpFunctionality()[pri:5, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:59 IST" name="verifyScrollDownScrollUpFunctionality" description="verify scroll down and scroll up functionality" finished-at="2023-09-13T15:16:59 IST" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownScrollUpFunctionality -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:16:59 IST" name="afterMethod" finished-at="2023-09-13T15:17:00 IST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:00 IST" name="beforeMethod" finished-at="2023-09-13T15:17:04 IST" duration-ms="4240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="sampleFailedTestCase()[pri:6, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:04 IST" name="sampleFailedTestCase" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:04 IST" duration-ms="19" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.HomeTest.sampleFailedTestCase(HomeTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:04 IST" name="afterMethod" finished-at="2023-09-13T15:17:05 IST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:05 IST" name="beforeMethod" finished-at="2023-09-13T15:17:09 IST" duration-ms="4406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="sampleFailedTestCase()[pri:6, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:09 IST" name="sampleFailedTestCase" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:09 IST" duration-ms="2" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.HomeTest.sampleFailedTestCase(HomeTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:09 IST" name="afterMethod" finished-at="2023-09-13T15:17:09 IST" duration-ms="502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:09 IST" name="beforeMethod" finished-at="2023-09-13T15:17:14 IST" duration-ms="4062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="sampleFailedTestCase()[pri:6, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:14 IST" name="sampleFailedTestCase" description="sample test case to run only failed test cases" finished-at="2023-09-13T15:17:14 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertFalse(Assert.java:79)
at org.testng.Assert.assertFalse(Assert.java:89)
at testclasses.HomeTest.sampleFailedTestCase(HomeTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66)
at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sampleFailedTestCase -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.HomeTest@8317c52]" started-at="2023-09-13T15:17:14 IST" name="afterMethod" finished-at="2023-09-13T15:17:14 IST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- testclasses.HomeTest -->
    </test> <!-- C:/Users/Rahul/Desktop/Edubridge/Selenium/Selenium codes/NaukriCom_FinalDataDrivenProject -->
  </suite> <!-- All Test Suite -->
</testng-results>
